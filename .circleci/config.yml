version: 2
jobs:
  build:
    docker:
      - image: myparcelcom/kubectl-aws
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASSWORD}
    working_directory: ~/project
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install curl git tar gzip -y
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.09.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Building and Pushing Docker images
          command: |
            IMAGE_TAG=$(image_tag)
            docker build -t myparcelcom/docs:${IMAGE_TAG} -f docker/build/Dockerfile .
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWORD}
            docker push myparcelcom/docs:${IMAGE_TAG}

  deploy:
    docker:
      - image: myparcelcom/kubectl-aws
        auth:
          username: ${DOCKER_USER}
          password: ${DOCKER_PASSWORD}
    steps:
      - checkout
      - run:
          name: Bootstrap AWS EKS and kubectl
          command: |
            export CLUSTER=$(cluster_name)
            export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
            export AWS_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
            bootstrap
      - run:
          name: Process templates
          command: |
            export NS=$(env_namespace)
            export IMAGE_TAG=$(image_tag)
            export ENV_HOST=$(env_host)

            envsubst < kube/deployment.template.yaml > kube/deployment.yaml
            envsubst < kube/service.template.yaml > kube/service.yaml
      - run:
          name: Deploy
          command: |
            kubectl apply -f kube/deployment.yaml
            kubectl apply -f kube/service.yaml

  deploy_staging:
    machine:
      image: circleci/classic:edge

    steps:
    - add_ssh_keys:
        fingerprints:
          - "1c:5c:08:53:84:9c:23:a1:aa:d5:d4:83:29:ad:86:fb"

    - checkout

    - run:
        name: Install dependencies
        command: ./mp.sh setup

    - run:
        name: Deploy to staging server
        command: |
          SSH_KEY_NAME=$(ls ~/.ssh | grep id_rsa_)
          ./mp.sh deploy staging ~/.ssh/${SSH_KEY_NAME:-id_rsa}

workflows:
  version: 2

  deploy:
    jobs:
      - build:
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: develop
      - deploy_staging:
          filters:
            branches:
              only: develop
